[
    {
        "id": "9e0d025ca3066ef6",
        "type": "tab",
        "label": "Bangle Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8c8f335c8f077d3b",
        "type": "mqtt in",
        "z": "9e0d025ca3066ef6",
        "name": "Temperatura",
        "topic": "banglejs2/data",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "33158955ab1e3378",
                "a4d3868fa42536d7"
            ]
        ]
    },
    {
        "id": "33158955ab1e3378",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Extrai Temperatura",
        "func": "var jsonData = msg.payload;\nif (typeof jsonData === 'string') jsonData = JSON.parse(jsonData);\nmsg.payload = jsonData.temperature;\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "c1a75d5c41fb2101"
            ]
        ]
    },
    {
        "id": "c1a75d5c41fb2101",
        "type": "ui_chart",
        "z": "9e0d025ca3066ef6",
        "name": "Gráfico Temperatura",
        "group": "3e6846a8592124de",
        "order": 2,
        "width": 14,
        "height": 4,
        "label": "Temperatura",
        "chartType": "line",
        "xformat": "HH:mm:ss",
        "ymin": 20,
        "ymax": 40,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "colors": [
            "#1f77b4"
        ],
        "outputs": 1,
        "x": 530,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "35121915292d032d",
        "type": "mqtt in",
        "z": "9e0d025ca3066ef6",
        "name": "Timestamp",
        "topic": "banglejs2/time",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "95c62cc22cf13426",
                "9713f0f55ad197ee"
            ]
        ]
    },
    {
        "id": "95c62cc22cf13426",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Extrai Timestamp",
        "func": "var jsonData = msg.payload;\nif (typeof jsonData === 'string') jsonData = JSON.parse(jsonData);\nmsg.payload = jsonData.timestamp;\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "1c23474774bed6ef"
            ]
        ]
    },
    {
        "id": "1c23474774bed6ef",
        "type": "ui_text",
        "z": "9e0d025ca3066ef6",
        "group": "3e6846a8592124de",
        "order": 3,
        "label": "Data/Hora",
        "format": "{{payload}} | {{new Date(payload * 1000).toLocaleString('pt-BR')}}",
        "layout": "row-spread",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "c45905470b408c53",
        "type": "mqtt in",
        "z": "9e0d025ca3066ef6",
        "name": "BPM",
        "topic": "banglejs2/hr",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "dfdaa174821f07b3",
                "6bcb0871711dcf1e"
            ]
        ]
    },
    {
        "id": "dfdaa174821f07b3",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Extrai BPM",
        "func": "var jsonData = msg.payload;\nif (typeof jsonData === 'string') jsonData = JSON.parse(jsonData);\nmsg.payload = jsonData.bpm;\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "caeac5dcdff3e812"
            ]
        ]
    },
    {
        "id": "caeac5dcdff3e812",
        "type": "ui_chart",
        "z": "9e0d025ca3066ef6",
        "name": "Gráfico BPM",
        "group": "74ae6e68c66fda11",
        "order": 1,
        "width": 14,
        "height": 4,
        "label": "Frequência Cardíaca",
        "chartType": "line",
        "xformat": "HH:mm:ss",
        "ymin": 40,
        "ymax": 150,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "colors": [
            "#d62728"
        ],
        "outputs": 1,
        "x": 530,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cd8d32df2285a33f",
        "type": "mqtt in",
        "z": "9e0d025ca3066ef6",
        "name": "Passos",
        "topic": "banglejs2/steps",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 130,
        "y": 260,
        "wires": [
            [
                "58e3166312f99952",
                "4ee0463d4998c990"
            ]
        ]
    },
    {
        "id": "58e3166312f99952",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Extrai Passos",
        "func": "var jsonData = msg.payload;\nif (typeof jsonData === 'string') jsonData = JSON.parse(jsonData);\nmsg.payload = jsonData.steps;\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 260,
        "wires": [
            [
                "f2747e7e5e3e6693"
            ]
        ]
    },
    {
        "id": "f2747e7e5e3e6693",
        "type": "ui_text",
        "z": "9e0d025ca3066ef6",
        "group": "74ae6e68c66fda11",
        "order": 2,
        "label": "Total de Passos",
        "format": "{{payload}} passos",
        "layout": "row-spread",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "e6f028704429d27e",
        "type": "mqtt in",
        "z": "9e0d025ca3066ef6",
        "name": "Acelerômetro",
        "topic": "banglejs2/accel",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "cea210b34514c131",
                "d8bc42374c58fc27"
            ]
        ]
    },
    {
        "id": "cea210b34514c131",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Extrai Acelerômetro",
        "func": "var jsonData = msg.payload;\nif (typeof jsonData === 'string') jsonData = JSON.parse(jsonData);\nmsg.payload = `X: ${jsonData.x} | Y: ${jsonData.y} | Z: ${jsonData.z}`;\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 320,
        "wires": [
            [
                "896c19637bfe36f5"
            ]
        ]
    },
    {
        "id": "896c19637bfe36f5",
        "type": "ui_text",
        "z": "9e0d025ca3066ef6",
        "group": "cb3f253a411cb5f6",
        "order": 1,
        "label": "Acelerômetro",
        "format": "{{payload}}",
        "layout": "row-spread",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "29ab322eb60670f5",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Combina leitura",
        "func": "// Junta os dados dos sensores em objeto único e acumula em array\nlet item = flow.get('dado_parcial') || {};\nlet tipo = msg.topic;\nlet dados = (typeof msg.payload === 'string') ? JSON.parse(msg.payload) : msg.payload;\nif (tipo === 'banglejs2/time') item.timestamp = dados.timestamp;\nif (tipo === 'banglejs2/data') item.temperature = dados.temperature;\nif (tipo === 'banglejs2/hr') item.bpm = dados.bpm;\nif (tipo === 'banglejs2/steps') item.steps = dados.steps;\nif (tipo === 'banglejs2/accel') { item.x = dados.x; item.y = dados.y; item.z = dados.z; }\n// Após receber todos, envia o registro completo para acumular\nif (item.timestamp && item.temperature && item.bpm && item.steps && item.x) {\n  flow.set('dado_parcial', {});\n  msg.payload = item;\n  return [msg];\n}\nflow.set('dado_parcial', item);\nreturn [null];",
        "outputs": 1,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "a58121a7413b7a4f"
            ]
        ]
    },
    {
        "id": "a58121a7413b7a4f",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Acumula Dados CSV",
        "func": "// Acumula o registro em array do flow context\nconst campos = ['timestamp', 'temperature', 'bpm', 'steps', 'x', 'y', 'z'];\nconst registro = msg.payload;\nlet lista = flow.get('dados_csv') || [];\nif (campos.every(k => registro.hasOwnProperty(k))) {\n  lista.push(registro);\n  flow.set('dados_csv', lista);\n}\nreturn null;",
        "outputs": 0,
        "x": 950,
        "y": 400,
        "wires": []
    },
    {
        "id": "63bf57fa49199bb6",
        "type": "ui_button",
        "z": "9e0d025ca3066ef6",
        "name": "Exportar CSV",
        "group": "3e6846a8592124de",
        "order": 5,
        "width": "3",
        "height": "1",
        "label": "Exportar CSV",
        "color": "white",
        "bgcolor": "#17a2b8",
        "icon": "file_download",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 400,
        "y": 500,
        "wires": [
            [
                "e752a716d37b70db"
            ]
        ]
    },
    {
        "id": "e752a716d37b70db",
        "type": "function",
        "z": "9e0d025ca3066ef6",
        "name": "Montar CSV",
        "func": "// Monta payload para node CSV\nmsg.payload = flow.get('dados_csv') || [];\nreturn msg;",
        "outputs": 1,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "dee78b045c040b41"
            ]
        ]
    },
    {
        "id": "dee78b045c040b41",
        "type": "csv",
        "z": "9e0d025ca3066ef6",
        "name": "Formatar CSV",
        "sep": ",",
        "hdrout": true,
        "multi": "mult",
        "ret": "\\n",
        "temp": "timestamp,temperature,bpm,steps,x,y,z",
        "x": 800,
        "y": 500,
        "wires": [
            [
                "84460fddc0941783"
            ]
        ]
    },
    {
        "id": "84460fddc0941783",
        "type": "file",
        "z": "9e0d025ca3066ef6",
        "name": "Salvar CSV",
        "filename": "C:/Users/raph2/node-red-static/dados_bangle.csv",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "6a95713aeece5c1d"
            ]
        ]
    },
    {
        "id": "6a95713aeece5c1d",
        "type": "ui_template",
        "z": "9e0d025ca3066ef6",
        "group": "3e6846a8592124de",
        "name": "Download CSV",
        "order": 6,
        "width": 6,
        "height": 1,
        "x": 1190,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9713f0f55ad197ee",
        "type": "link out",
        "z": "9e0d025ca3066ef6",
        "name": "To CombinaDados (time)",
        "links": [
            "2fb237b55c76cde5"
        ],
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4d3868fa42536d7",
        "type": "link out",
        "z": "9e0d025ca3066ef6",
        "name": "To CombinaDados (temp)",
        "links": [
            "2fb237b55c76cde5"
        ],
        "x": 470,
        "y": 80,
        "wires": []
    },
    {
        "id": "6bcb0871711dcf1e",
        "type": "link out",
        "z": "9e0d025ca3066ef6",
        "name": "To CombinaDados (bpm)",
        "links": [
            "2fb237b55c76cde5"
        ],
        "x": 470,
        "y": 200,
        "wires": []
    },
    {
        "id": "4ee0463d4998c990",
        "type": "link out",
        "z": "9e0d025ca3066ef6",
        "name": "To CombinaDados (steps)",
        "links": [
            "2fb237b55c76cde5"
        ],
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "d8bc42374c58fc27",
        "type": "link out",
        "z": "9e0d025ca3066ef6",
        "name": "To CombinaDados (accel)",
        "links": [
            "2fb237b55c76cde5"
        ],
        "x": 470,
        "y": 320,
        "wires": []
    },
    {
        "id": "2fb237b55c76cde5",
        "type": "link in",
        "z": "9e0d025ca3066ef6",
        "name": "De sensores para CombinaDados",
        "links": [
            "9713f0f55ad197ee",
            "a4d3868fa42536d7",
            "6bcb0871711dcf1e",
            "4ee0463d4998c990",
            "d8bc42374c58fc27"
        ],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "29ab322eb60670f5"
            ]
        ]
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Local MQTT",
        "broker": "192.168.27.101",
        "port": "1883",
        "clientid": "nodered_bangle",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3e6846a8592124de",
        "type": "ui_group",
        "name": "Sensor Temperatura",
        "tab": "ab66081d8896b578",
        "order": 1,
        "width": 14,
        "collapse": false
    },
    {
        "id": "74ae6e68c66fda11",
        "type": "ui_group",
        "name": "Sensor Frequência Cardíaca",
        "tab": "ab66081d8896b578",
        "order": 2,
        "width": 14,
        "collapse": false
    },
    {
        "id": "cb3f253a411cb5f6",
        "type": "ui_group",
        "name": "Acelerômetro",
        "tab": "ab66081d8896b578",
        "order": 3,
        "width": 14,
        "collapse": false
    },
    {
        "id": "ab66081d8896b578",
        "type": "ui_tab",
        "name": "Wireless Communication Protocols for IoT Applications",
        "order": 1
    }
]
